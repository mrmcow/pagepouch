console.log("🦊 Firefox popup script loaded");const extensionAPI="undefined"!=typeof browser?browser:chrome;console.log("🦊 Using extension API:","undefined"!=typeof browser?"browser":"chrome");let appState={isCapturing:!1,isAuthenticated:!1,showAuth:!1,currentTab:null,userEmail:null,captureProgress:null,folders:[],selectedFolderId:null,loadingFolders:!1,clipsRemaining:50,clipsLimit:50,subscriptionTier:"free",warningLevel:"safe",usageLoading:!1},authState={email:"",password:"",isSignUp:!1,isLoading:!1,error:null};const styles={container:'width: 360px; min-height: 480px; font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif; background-color: #ffffff; color: #1f2937; font-size: 14px; line-height: 1.5; display: flex; flex-direction: column;',header:"padding: 16px 20px 12px 20px; display: flex; flex-direction: column; align-items: center; text-align: center; border-bottom: 1px solid #f1f5f9;",logoSection:"display: flex; flex-direction: column; align-items: center; gap: 6px; margin-bottom: 8px;",brandName:"font-size: 20px; font-weight: 700; color: #1e293b; margin: 0; letter-spacing: -0.025em; text-align: center;",content:"padding: 16px 20px; flex: 1; display: flex; flex-direction: column; align-items: center; gap: 12px;",button:"padding: 14px 24px; border-radius: 12px; border: none; font-weight: 500; font-size: 14px; cursor: pointer; transition: all 0.2s ease; display: flex; align-items: center; justify-content: center; gap: 8px; width: 100%; max-width: 280px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);",primaryButton:"background-color: #3b82f6; color: white; box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);",secondaryButton:"background-color: #ffffff; color: #475569; border: 1px solid #e2e8f0; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);",input:"width: 100%; max-width: 280px; padding: 14px 16px; border: 1px solid #e2e8f0; border-radius: 12px; font-size: 14px; margin-bottom: 16px; box-sizing: border-box; background-color: #ffffff; transition: all 0.2s ease; outline: none; text-align: center;",card:"background-color: #f8fafc; border: 1px solid #f1f5f9; border-radius: 12px; padding: 20px; width: 100%; max-width: 280px; text-align: center; box-sizing: border-box;",badge:"display: inline-flex; align-items: center; padding: 4px 8px; background-color: #dbeafe; color: #1d4ed8; border-radius: 12px; font-size: 12px; font-weight: 500;",tabInfo:"display: flex; align-items: flex-start; gap: 12px; padding: 16px; background-color: #f8fafc; border-radius: 12px; border: 1px solid #f1f5f9; width: 100%; max-width: 280px; box-sizing: border-box; flex-direction: column; text-align: center;"};function createLogo(e=32){return`\n    <svg width="${e}" height="${e}" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg" style="filter: drop-shadow(0 4px 12px rgba(59, 130, 246, 0.3));">\n      <defs>\n        <filter id="emboss-${e}" x="-20%" y="-20%" width="140%" height="140%">\n          <feDropShadow dx="0.5" dy="0.5" stdDeviation="0.3" floodColor="#1d4ed8" floodOpacity="0.3"/>\n        </filter>\n      </defs>\n      <path d="M9 6C9 4.89543 9.89543 4 11 4H35C36.1046 4 37 4.89543 37 6V40C37 41.1046 36.1046 42 35 42H11C9.89543 42 9 41.1046 9 40V6Z" fill="#f8fafc" stroke="#2563eb" stroke-width="2"/>\n      <path d="M37 6V18L42 13V8C42 6.89543 41.1046 6 40 6H37Z" fill="#2563eb" stroke="#2563eb" stroke-width="2" stroke-linejoin="round"/>\n      <path d="M38.5 9.5V15.5M38.5 9.5H40C40.5523 9.5 41 9.94772 41 10.5V11.5C41 12.0523 40.5523 12.5 40 12.5H38.5M38.5 9.5V12.5" stroke="#ffffff" stroke-width="1" stroke-linecap="round" stroke-linejoin="round" filter="url(#emboss-${e})"/>\n      <rect x="15" y="14" width="14" height="1.5" rx="0.75" fill="#64748b" opacity="0.3"/>\n      <rect x="15" y="18" width="10" height="1.5" rx="0.75" fill="#64748b" opacity="0.3"/>\n      <rect x="15" y="22" width="12" height="1.5" rx="0.75" fill="#64748b" opacity="0.3"/>\n    </svg>\n  `}function createElement(e,t={},a=[]){const n=document.createElement(e);return Object.entries(t).forEach(([e,t])=>{"style"===e?n.setAttribute("style",t):"onClick"===e?n.addEventListener("click",t):n.setAttribute(e,t)}),a.forEach(e=>{"string"==typeof e?n.innerHTML+=e:n.appendChild(e)}),n}async function loadFolders(){console.log("🦊 Loading user folders..."),appState.loadingFolders=!0,render(),await new Promise(e=>setTimeout(e,100));try{const e=await extensionAPI.runtime.sendMessage({type:"GET_FOLDERS"});if(console.log("🦊 Folders response:",e),e&&e.folders&&Array.isArray(e.folders)){if(appState.folders=e.folders,console.log("🦊 Loaded folders:",appState.folders),0===appState.folders.length){console.log("🦊 No folders found, creating default Inbox folder...");try{const e=await extensionAPI.runtime.sendMessage({type:"CREATE_FOLDER",payload:{name:"Inbox",color:"#6B7280"}});e&&e.folder&&(appState.folders=[e.folder],appState.selectedFolderId=e.folder.id,console.log("🦊 Created default Inbox folder:",e.folder))}catch(e){console.error("🦊 Failed to create default folder:",e)}}else if(!appState.selectedFolderId){const e=appState.folders.find(e=>"inbox"===e.name.toLowerCase());appState.selectedFolderId=e?e.id:appState.folders[0].id,console.log("🦊 Selected default folder:",appState.selectedFolderId,e?"(Inbox found)":"(First folder)"),await extensionAPI.storage.local.set({selectedFolderId:appState.selectedFolderId})}}else console.log("🦊 No folders in response or invalid format, using empty folder list"),console.log("🦊 Response structure:",e),appState.folders=[],appState.selectedFolderId=null}catch(e){console.error("🦊 Failed to load folders:",e),appState.folders=[],appState.selectedFolderId=null}appState.loadingFolders=!1,render()}async function loadUsage(){console.log("🦊 Loading user usage..."),appState.usageLoading=!0,render();try{const e=await extensionAPI.runtime.sendMessage({type:"GET_USAGE"});console.log("🦊 Usage response:",e),e&&!e.error?(appState.clipsRemaining=e.clips_remaining,appState.clipsLimit=e.clips_limit,appState.subscriptionTier=e.subscription_tier,appState.warningLevel=e.warning_level,console.log("🦊 Loaded usage:",{remaining:appState.clipsRemaining,limit:appState.clipsLimit,tier:appState.subscriptionTier,warning:appState.warningLevel})):console.error("🦊 Failed to load usage:",e?.error)}catch(e){console.error("🦊 Error loading usage:",e)}appState.usageLoading=!1,render()}async function handleFolderChange(e){console.log("🦊 Folder selected:",e),appState.selectedFolderId=e,await extensionAPI.storage.local.set({selectedFolderId:e}),render()}function getUsageBadgeStyle(){const e=styles.badge;switch(appState.warningLevel){case"critical":return e+"; background-color: #dc2626; color: white;";case"warning":return e+"; background-color: #f59e0b; color: white;";case"exceeded":return e+"; background-color: #7f1d1d; color: white;";default:return e}}function getUsageBadgeText(){return appState.usageLoading?"Loading...":"exceeded"===appState.warningLevel?"Limit reached":`${appState.clipsRemaining} clips left`}async function checkAuthStatus(){try{console.log("🦊 Checking auth status...");const e=await extensionAPI.storage.local.get(["authToken","userEmail","selectedFolderId"]);console.log("🦊 Storage result:",e),e?(appState.isAuthenticated=!!e.authToken,appState.userEmail=e.userEmail,appState.selectedFolderId=e.selectedFolderId,console.log("🦊 Auth status:",appState.isAuthenticated,"Email:",appState.userEmail),appState.isAuthenticated&&await Promise.all([loadFolders(),loadUsage()])):(console.log("🦊 No storage result, setting defaults"),appState.isAuthenticated=!1,appState.userEmail=null,appState.selectedFolderId=null)}catch(e){console.error("🦊 Error checking auth status:",e),appState.isAuthenticated=!1,appState.userEmail=null}}async function getCurrentTab(){try{console.log("🦊 Getting current tab...");const e=await extensionAPI.tabs.query({active:!0,currentWindow:!0});console.log("🦊 Tabs result:",e),e&&e.length>0&&e[0]?(appState.currentTab=e[0],console.log("🦊 Current tab:",appState.currentTab.title)):(console.log("🦊 No active tab found"),appState.currentTab=null)}catch(e){console.error("🦊 Error getting current tab:",e),appState.currentTab=null}}async function capturePage(e){if(appState.currentTab?.id){if(!appState.isAuthenticated)return appState.showAuth=!0,void render();appState.isCapturing=!0,appState.captureProgress={status:"starting",message:"fullPage"===e?"Preparing full page capture...":"Preparing visible area capture..."},render();try{setTimeout(()=>{appState.captureProgress={status:"capturing",message:"fullPage"===e?"Capturing full page...":"Capturing visible area..."},render()},100),await extensionAPI.runtime.sendMessage({type:"CAPTURE_PAGE",payload:{tabId:appState.currentTab.id,captureType:e,url:appState.currentTab.url,title:appState.currentTab.title,...appState.selectedFolderId&&"inbox"!==appState.selectedFolderId?{folderId:appState.selectedFolderId}:{}}}),appState.captureProgress={status:"complete",message:"Capture successful! 🎉"},render(),setTimeout(()=>{appState.isCapturing=!1,appState.captureProgress=null,render()},2e3)}catch(e){console.error("Capture failed:",e),appState.isCapturing=!1,appState.captureProgress={status:"error",message:"Capture failed. Please refresh the page and try again."},render(),setTimeout(()=>{appState.captureProgress=null,render()},3e3)}}}async function handleAuth(){authState.isLoading=!0,authState.error=null,render();try{console.log("🦊 Sending auth request:",{email:authState.email,isSignUp:authState.isSignUp});const e=await extensionAPI.runtime.sendMessage({type:"AUTHENTICATE",payload:{email:authState.email,password:authState.password,isSignUp:authState.isSignUp}});if(console.log("🦊 Auth response received:",e),e&&e.error)return console.error("🦊 Auth failed:",e.error),authState.error=e.error.message||"Authentication failed",authState.isLoading=!1,void render();if(!e||!e.data)return console.error("🦊 Invalid response:",e),authState.error="Invalid response from server",authState.isLoading=!1,void render();console.log("🦊 Auth successful!"),appState.isAuthenticated=!0,appState.userEmail=authState.email,appState.showAuth=!1,authState={email:"",password:"",isSignUp:!1,isLoading:!1,error:null},await Promise.all([loadFolders(),loadUsage()]),render()}catch(e){console.error("🦊 Auth error:",e),authState.error="Authentication failed. Please try again.",authState.isLoading=!1,render()}}async function signOut(){try{await extensionAPI.runtime.sendMessage({type:"SIGN_OUT"}),appState.isAuthenticated=!1,appState.userEmail=null,appState.showAuth=!1,render()}catch(e){console.error("Sign out failed:",e),await extensionAPI.storage.local.remove(["authToken","userEmail","userId","refreshToken","isAuthenticated"]),appState.isAuthenticated=!1,appState.userEmail=null,render()}}function updateAuthButtonState(){const e=document.getElementById("auth-submit");if(e){const t=!authState.isLoading&&authState.email&&authState.password;e.disabled=!t,e.style.opacity=t?"1":"0.6"}}function renderAuthScreen(){return`\n    <div style="${styles.container}">\n      <div style="${styles.header}">\n        <div style="${styles.logoSection}">\n          ${createLogo(32)}\n          <h1 style="${styles.brandName}">PagePouch</h1>\n        </div>\n        <button id="close-auth" style="position: absolute; top: 16px; right: 16px; background: none; border: none; font-size: 20px; cursor: pointer; color: #64748b; width: 32px; height: 32px; border-radius: 6px; display: flex; align-items: center; justify-content: center;">×</button>\n      </div>\n      <div style="${styles.content}">\n        <div style="text-align: center; margin-bottom: 24px;">\n          <h2 style="margin: 0 0 8px 0; font-size: 18px; font-weight: 600;">${authState.isSignUp?"Create Account":"Sign In"}</h2>\n          <p style="margin: 0; color: #6b7280; font-size: 13px;">${authState.isSignUp?"Start capturing and organizing web content":"Access your PagePouch library"}</p>\n        </div>\n        <input id="email-input" type="email" placeholder="Email" value="${authState.email}" style="${styles.input}">\n        <input id="password-input" type="password" placeholder="Password" value="${authState.password}" style="${styles.input}">\n        ${authState.error?`<div style="color: #dc2626; font-size: 12px; margin-top: 4px;">${authState.error}</div>`:""}\n        <button id="auth-submit" ${!authState.isLoading&&authState.email&&authState.password?"":"disabled"} style="${styles.button}; ${styles.primaryButton}; opacity: ${!authState.isLoading&&authState.email&&authState.password?"1":"0.6"};">\n          ${authState.isLoading?"⏳ Processing...":authState.isSignUp?"Create Account":"Sign In"}\n        </button>\n        <button id="auth-toggle" style="${styles.button}; ${styles.secondaryButton};">\n          ${authState.isSignUp?"Already have an account? Sign In":"Need an account? Sign Up"}\n        </button>\n      </div>\n    </div>\n  `}function renderMainScreen(){return`\n    <div style="${styles.container}">\n      <div style="${styles.header}">\n        <div style="${styles.logoSection}">\n          ${createLogo(40)}\n          <h1 style="${styles.brandName}">PagePouch</h1>\n          ${appState.isAuthenticated?`<div style="${getUsageBadgeStyle()}">${getUsageBadgeText()}</div>`:""}\n        </div>\n      </div>\n      <div style="${styles.content}">\n        ${appState.currentTab?`\n          <div style="${styles.tabInfo}">\n            ${appState.currentTab.favIconUrl?`<img src="${appState.currentTab.favIconUrl}" alt="Site icon" style="width: 16px; height: 16px; border-radius: 2px; margin-bottom: 4px;">`:""}\n            <div style="text-align: center; width: 100%;">\n              <div style="font-weight: 500; font-size: 13px; text-align: center; margin-bottom: 4px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">${appState.currentTab.title||"Untitled"}</div>\n              <div style="font-size: 11px; color: #6b7280; text-align: center; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">${appState.currentTab.url}</div>\n            </div>\n          </div>\n        `:""}\n        \n        ${appState.captureProgress?`\n          <div style="${styles.card}; background-color: ${"error"===appState.captureProgress.status?"#fef2f2":"complete"===appState.captureProgress.status?"#f0fdf4":"#f0f9ff"}; border: ${"error"===appState.captureProgress.status?"1px solid #fecaca":"complete"===appState.captureProgress.status?"1px solid #bbf7d0":"1px solid #bfdbfe"};">\n            <div style="margin-bottom: 12px; font-weight: 600; color: ${"error"===appState.captureProgress.status?"#dc2626":"complete"===appState.captureProgress.status?"#16a34a":"#2563eb"};">\n              ${"complete"===appState.captureProgress.status?"✅ Capture Complete!":"error"===appState.captureProgress.status?"❌ Capture Failed":"📸 Capturing..."}\n            </div>\n            ${"error"!==appState.captureProgress.status?`\n              <div style="width: 100%; height: 4px; background-color: #e5e7eb; border-radius: 2px; overflow: hidden; margin-bottom: 8px;">\n                <div style="height: 100%; background-color: ${"complete"===appState.captureProgress.status?"#16a34a":"#2563eb"}; border-radius: 2px; transition: width 0.3s ease; width: ${"complete"===appState.captureProgress.status?"100%":"capturing"===appState.captureProgress.status?"75%":"25%"};"></div>\n              </div>\n            `:""}\n            <div style="font-size: 13px; color: ${"error"===appState.captureProgress.status?"#dc2626":"#6b7280"}; margin-top: 8px;">${appState.captureProgress.message}</div>\n          </div>\n        `:""}\n        \n        \n        ${appState.isAuthenticated&&appState.folders&&appState.folders.length>0&&!appState.isCapturing?`\n          <div style="width: 100%; max-width: 280px; margin-bottom: 12px;">\n            <label style="display: block; font-size: 12px; font-weight: 500; color: #6b7280; margin-bottom: 6px;">Save to folder:</label>\n            ${appState.loadingFolders?'\n              <div style="padding: 12px; text-align: center; color: #6b7280; font-size: 13px;">Loading folders...</div>\n            ':`\n              <select id="folder-select" style="width: 100%; padding: 12px 16px; border: 1px solid #e2e8f0; border-radius: 12px; font-size: 14px; background-color: #ffffff; color: #1f2937; cursor: pointer; outline: none; appearance: none; -webkit-appearance: none; -moz-appearance: none; background-image: url('data:image/svg+xml;charset=US-ASCII,<svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 4 5&quot;><path fill=&quot;%23666&quot; d=&quot;M2 0L0 2h4zm0 5L0 3h4z&quot;/></svg>'); background-repeat: no-repeat; background-position: right 12px center; background-size: 12px; padding-right: 40px;">\n                ${appState.folders.map(e=>`\n                  <option value="${e.id}" ${e.id===appState.selectedFolderId?"selected":""}>\n                    ${e.name}${e.is_default?" (Default)":""}\n                  </option>\n                `).join("")}\n              </select>\n            `}\n          </div>\n        `:""}\n        \n        \n        ${appState.isCapturing||appState.captureProgress?"":"exceeded"===appState.warningLevel?`\n            <div style="padding: 16px; background-color: #fef2f2; border: 1px solid #fecaca; border-radius: 12px; text-align: center; margin-bottom: 12px;">\n              <div style="font-size: 14px; font-weight: 500; color: #dc2626; margin-bottom: 8px;">\n                Monthly limit reached\n              </div>\n              <div style="font-size: 12px; color: #7f1d1d; margin-bottom: 12px;">\n                You've used all ${appState.clipsLimit} clips this month. Upgrade to Pro for unlimited clips!\n              </div>\n              <button id="upgrade-pro" style="${styles.button}; ${styles.primaryButton}; background-color: #dc2626;">🚀 Upgrade to Pro</button>\n            </div>\n          `:`\n            <button id="capture-full" style="${styles.button}; ${styles.primaryButton};">📄 Capture Full Page</button>\n            <button id="capture-visible" style="${styles.button}; ${styles.secondaryButton};">📱 Capture Visible Area</button>\n          `}\n        \n        ${appState.isAuthenticated?`\n          <div style="${styles.card}">\n            <div style="margin-bottom: 12px;">\n              <div style="font-weight: 500; margin-bottom: 4px;">👋 Welcome back!</div>\n              <div style="font-size: 12px; color: #6b7280;">${appState.userEmail}</div>\n            </div>\n            <button id="open-webapp" style="${styles.button}; ${styles.primaryButton};">🌐 Open Web App</button>\n            <button id="sign-out" style="${styles.button}; ${styles.secondaryButton};">Sign Out</button>\n          </div>\n        `:`\n          <div style="${styles.card}">\n            <div style="margin-bottom: 12px;">\n              <div style="font-weight: 500; margin-bottom: 4px;">🔒 Sign in for cloud sync</div>\n              <div style="font-size: 12px; color: #6b7280;">Access your clips anywhere and never lose them</div>\n            </div>\n            <button id="show-auth" style="${styles.button}; ${styles.secondaryButton};">Sign In / Sign Up</button>\n          </div>\n        `}\n        \n        <div style="text-align: center; margin-top: auto; padding-top: 24px; border-top: 1px solid #f1f5f9; font-size: 12px; color: #94a3b8;">\n          <div style="font-weight: 500; margin-bottom: 4px;">PagePouch v1.1.0</div>\n          <div>Capture • Organize • Retrieve</div>\n        </div>\n      </div>\n    </div>\n  `}function render(){const e=document.getElementById("popup-root");if(e)if(e.innerHTML=appState.showAuth?renderAuthScreen():renderMainScreen(),appState.showAuth){const e=document.getElementById("close-auth"),t=document.getElementById("email-input"),a=document.getElementById("password-input"),n=document.getElementById("auth-submit"),o=document.getElementById("auth-toggle");e&&e.addEventListener("click",()=>{appState.showAuth=!1,render()}),t&&t.addEventListener("input",e=>{authState.email=e.target.value,updateAuthButtonState()}),a&&a.addEventListener("input",e=>{authState.password=e.target.value,updateAuthButtonState()}),n&&n.addEventListener("click",handleAuth),o&&o.addEventListener("click",()=>{authState.isSignUp=!authState.isSignUp,authState.error=null,render()})}else{const e=document.getElementById("capture-full"),t=document.getElementById("capture-visible"),a=document.getElementById("show-auth"),n=document.getElementById("sign-out"),o=document.getElementById("open-webapp"),r=document.getElementById("folder-select"),i=document.getElementById("upgrade-pro");e&&e.addEventListener("click",()=>capturePage("fullPage")),t&&t.addEventListener("click",()=>capturePage("visible")),a&&a.addEventListener("click",()=>{appState.showAuth=!0,render()}),n&&n.addEventListener("click",signOut),o&&o.addEventListener("click",()=>{extensionAPI.tabs.create({url:"https://pagepouch-web.vercel.app/dashboard"})}),i&&i.addEventListener("click",()=>{extensionAPI.tabs.create({url:"https://pagepouch-web.vercel.app/pricing"})}),r&&r.addEventListener("change",e=>{handleFolderChange(e.target.value)})}else console.error("popup-root not found")}async function init(){console.log("🦊 Initializing Firefox popup"),await checkAuthStatus(),await getCurrentTab(),extensionAPI.runtime.onMessage.addListener(e=>{"CAPTURE_PROGRESS"===e.type&&(appState.captureProgress={status:e.payload.status,message:e.payload.message},"complete"===e.payload.status&&e.payload.usage&&(appState.clipsRemaining=e.payload.usage.clips_remaining,appState.clipsLimit=e.payload.usage.clips_limit,appState.subscriptionTier=e.payload.usage.subscription_tier,appState.warningLevel=e.payload.usage.warning_level,console.log("🦊 Updated usage after capture:",{remaining:appState.clipsRemaining,limit:appState.clipsLimit,warning:appState.warningLevel})),render(),"complete"===e.payload.status&&setTimeout(()=>{appState.captureProgress=null,appState.isCapturing=!1,render()},2e3))}),render(),console.log("🦊 Firefox popup initialized")}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",init):init();